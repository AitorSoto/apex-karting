---
import Layout from '../../layouts/Layout.astro';
import driversData from '../../../public/data/drivers.json';
import teams from '../../../public/data/teams.json';
import results from '../../../public/data/results.json';
import qualifying from '../../../public/data/qualifying.json';
import races from '../../../public/data/races.json';
import circuits from '../../../public/data/circuits.json';

export async function getStaticPaths() {
  return driversData.map((driver: any) => ({
    params: { id: driver.id.toString() },
  }));
}

const { id } = Astro.params;
const drivers = driversData;

const driver = drivers.find((d: any) => d.id === parseInt(id));
if (!driver) throw new Error(`Driver with id ${id} not found`);

const driverDescription = `${driver.name} - #${driver.number} - Apex Karting`;

const countryCodeMap: Record<string, string> = {
  'ESP': 'es',
  'USA': 'us',
  'BEL': 'be',
  'POR': 'pt',
};

// For reserve drivers, use gray color and find all teams they've raced for
const defaultTeam = driver.teamId ? teams.find((t: any) => t.id === driver.teamId) : null;
if (!defaultTeam && !driver.isReserve) {
  throw new Error(`Team with id ${driver.teamId} not found`);
}

const driverResults = results.filter((r: any) => r.driverId === driver.id);

// Get unique teams the driver has raced for
const racedForTeamIds = [...new Set(driverResults.map((r: any) => r.teamId).filter(Boolean))];
const racedForTeams = racedForTeamIds.map(teamId => teams.find((t: any) => t.id === teamId)).filter(Boolean);

// Use gray for reserve drivers, otherwise use their team color
const displayColor = driver.isReserve ? '#71717a' : (defaultTeam?.color || '#71717a');
const team = driver.isReserve 
  ? { id: 0, color: displayColor, name: 'Piloto Reserva', logo: '' } 
  : defaultTeam;
const driverQualifying = qualifying.filter((q: any) => q.driverId === driver.id);

const totalPoints = driverResults.reduce((sum: number, r: any) => sum + r.points, 0);
const wins = driverResults.filter((r: any) => r.position === 1 && !r.dnf).length;
const podiums = driverResults.filter((r: any) => r.position <= 3 && !r.dnf).length;
const poles = driverQualifying.filter((q: any) => q.position === 1 && !q.dnf).length;

const raceHistory = driverResults.map((result: any) => {
  const race = races.find((r: any) => r.id === result.raceId);
  const circuit = circuits.find((c: any) => c.id === race?.circuitId);
  const raceTeam = teams.find((t: any) => t.id === (result.teamId || driver.teamId));
  const qualyResult: any = driverQualifying.find((q: any) => q.raceId === result.raceId);
  const hadPole = qualyResult?.position === 1 && !qualyResult?.dnf;
  
  // Find fastest lap in this race
  const raceResults = results.filter((r: any) => r.raceId === result.raceId && !r.dnf);
  const fastestInRace = raceResults.reduce((fastest: any, r: any) => {
    if (!fastest || r.fastestLap < fastest.fastestLap) return r;
    return fastest;
  }, null);
  const hadFastestLap = fastestInRace && fastestInRace.driverId === result.driverId && !result.dnf;
  
  return { ...result, race, circuit, raceTeam, hadPole, hadFastestLap };
}).sort((a: any, b: any) => a.race.round - b.race.round);

function hexToRgba(hex: string, alpha: number) {
  const r = parseInt(hex.slice(1, 3), 16);
  const g = parseInt(hex.slice(3, 5), 16);
  const b = parseInt(hex.slice(5, 7), 16);
  return `rgba(${r}, ${g}, ${b}, ${alpha})`;
}

function getContrastColor(hex: string) {
  const r = parseInt(hex.slice(1, 3), 16);
  const g = parseInt(hex.slice(3, 5), 16);
  const b = parseInt(hex.slice(5, 7), 16);
  // Calculate relative luminance
  const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;
  return luminance > 0.5 ? '#000000' : '#ffffff';
}

const teamColorRgba20 = hexToRgba(team.color, 0.12);
const teamColorRgba15 = hexToRgba(team.color, 0.08);
const teamColorRgba50 = hexToRgba(team.color, 0.3);
const teamColorRgba40 = hexToRgba(team.color, 0.25);
const teamColorRgba30 = hexToRgba(team.color, 0.18);
const headerTextColor = getContrastColor(team.color);
---

<Layout 
  title={`${driver.name} - Apex Karting`}
  description={driverDescription}
  image={driver.image || undefined}
>
  <style>
    .driver-header::before {
      content: '';
      position: absolute;
      inset: -2px;
      border-radius: 1rem;
      padding: 2px;
      background: linear-gradient(135deg, var(--team-color), transparent 40%, transparent 60%, var(--team-color));
      -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
      -webkit-mask-composite: xor;
      mask-composite: exclude;
      opacity: 0.8;
      pointer-events: none;
    }
  </style>
  <a href="/drivers" class="inline-block mb-6 text-red-500 hover:text-red-400 transition-colors">
    ← Volver a Pilotos
  </a>

  <div class="driver-header relative rounded-2xl p-8 md:p-10 mb-8 shadow-2xl overflow-visible" style={`--team-color: ${team.color}; background: linear-gradient(135deg, ${teamColorRgba20} 0%, #18181b 30%, #18181b 70%, ${teamColorRgba15} 100%)`}>
    <div class="absolute top-0 left-0 w-full h-full rounded-2xl opacity-40 pointer-events-none" style={`background: radial-gradient(circle at 20% 50%, ${teamColorRgba50} 0%, transparent 50%), radial-gradient(circle at 80% 80%, ${teamColorRgba40} 0%, transparent 50%)`}></div>
    <div class="relative flex flex-col md:flex-row items-center md:items-start gap-8">
      <div class="flex-1 text-center md:text-left">
        <div class="text-6xl md:text-7xl font-black mb-4" style={`color: ${team.color}; text-shadow: 0 0 30px ${teamColorRgba40}`} transition:name={driver.image ? '' : `driver-number-${driver.id}`}>#{driver.number}</div>
        <h1 class="text-5xl md:text-6xl font-black mb-6 tracking-tight" style={`text-shadow: 0 0 20px ${teamColorRgba30}`} transition:name={`driver-name-${driver.id}`}>{driver.name}</h1>
        {!driver.isReserve && defaultTeam && (
          <a href={`/teams/${defaultTeam.id}`} class="inline-flex items-center gap-3 bg-zinc-950/50 backdrop-blur-sm rounded-full px-6 py-3 border border-zinc-700 hover:border-zinc-600 transition-all mb-4 group">
            <span class="w-4 h-4 rounded-full" style={`background-color: ${defaultTeam.color}; box-shadow: 0 0 10px ${teamColorRgba40}`}></span>
            <span class="text-xl font-semibold group-hover:text-white transition-colors" style={`color: ${defaultTeam.color}`}>{defaultTeam.name}</span>
          </a>
        )}
        {driver.isReserve && (
          <div class="space-y-3 mb-4">
            <div class="inline-flex items-center gap-2 bg-zinc-800/80 backdrop-blur-sm rounded-full px-5 py-2 border border-zinc-600">
              <span class="text-zinc-400 text-sm font-bold uppercase">Piloto Reserva</span>
            </div>
            <div class="bg-zinc-900/50 backdrop-blur-sm rounded-lg p-4 border border-zinc-700">
              <div class="text-xs text-zinc-500 uppercase font-bold mb-2">
                {racedForTeams.length > 0 ? 'Ha corrido para:' : (defaultTeam ? 'Equipo asignado:' : 'Disponible para cualquier equipo')}
              </div>
              <div class="flex flex-wrap gap-2">
                {racedForTeams.length > 0 ? (
                  racedForTeams.map((t: any) => (
                    <a href={`/teams/${t.id}`} class="inline-flex items-center gap-2 bg-zinc-950/50 backdrop-blur-sm rounded-full px-4 py-2 border border-zinc-700 hover:border-zinc-600 transition-all group">
                      <span class="w-3 h-3 rounded-full" style={`background-color: ${t.color}`}></span>
                      <span class="text-sm font-semibold group-hover:text-white transition-colors" style={`color: ${t.color}`}>{t.name}</span>
                    </a>
                  ))
                ) : defaultTeam ? (
                  <a href={`/teams/${defaultTeam.id}`} class="inline-flex items-center gap-2 bg-zinc-950/50 backdrop-blur-sm rounded-full px-4 py-2 border border-zinc-700 hover:border-zinc-600 transition-all group">
                    <span class="w-3 h-3 rounded-full" style={`background-color: ${defaultTeam.color}`}></span>
                    <span class="text-sm font-semibold group-hover:text-white transition-colors" style={`color: ${defaultTeam.color}`}>{defaultTeam.name}</span>
                  </a>
                ) : (
                  <span class="text-sm text-zinc-400">Puede correr para cualquier equipo según necesidad</span>
                )}
              </div>
            </div>
          </div>
        )}
        <div class="flex items-center justify-center md:justify-start gap-2">
          <span class={`fi fi-${countryCodeMap[driver.nationality] || 'xx'} text-4xl shadow-lg`}></span>
        </div>
      </div>
      {driver.image && (
        <div class="relative group">
          <div class="absolute -inset-4 blur-3xl opacity-50 group-hover:opacity-70 transition-all duration-500" style={`background: linear-gradient(135deg, ${team.color}, transparent)`}></div>
          
          <div class="relative w-64 h-64 md:w-80 md:h-80 overflow-hidden shadow-2xl" style="clip-path: polygon(0 0, 100% 0, 100% 85%, 85% 100%, 0 100%);" transition:name={`driver-image-${driver.id}`}>
            <img src={driver.image} alt={driver.name} class="w-full h-full object-cover" style={`object-position: ${driver.imagePosition || 'top'}`} />

            <div class="absolute inset-0 bg-gradient-to-tr from-black/40 via-transparent to-transparent"></div>
            <div class="absolute inset-0 bg-gradient-to-b from-transparent via-transparent to-black/60"></div>
            
            <!-- Driver number in bottom-right corner -->
            <div class="absolute bottom-2 right-2 flex items-center justify-center" style={`background: ${team.color}; clip-path: polygon(15% 0, 100% 0, 100% 100%, 0 100%);`}>
              <span class="text-4xl md:text-5xl font-black px-4 py-2 text-white" style="text-shadow: 2px 2px 4px rgba(0,0,0,0.5);">#{driver.number}</span>
            </div>
            
            <div class="absolute bottom-0 left-0 w-full h-1 opacity-80" style={`background: linear-gradient(90deg, ${team.color}, transparent)`}></div>
          </div>
        </div>
      )}
    </div>
  </div>

  <!-- Stats -->
  <div class="grid grid-cols-2 md:grid-cols-4 gap-6 mb-8">
    <div class="relative bg-zinc-900/50 backdrop-blur-sm rounded-xl p-6 text-center border-2 border-zinc-800 hover:border-red-500/50 transition-all group overflow-hidden">
      <div class="absolute inset-0 bg-gradient-to-br from-red-500/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity"></div>
      <div class="relative text-4xl md:text-5xl font-black bg-gradient-to-br from-red-500 to-red-400 bg-clip-text text-transparent mb-2">{totalPoints}</div>
      <div class="relative text-zinc-400 uppercase text-xs md:text-sm font-bold tracking-wide">Puntos Totales</div>
    </div>
    <div class="relative bg-zinc-900/50 backdrop-blur-sm rounded-xl p-6 text-center border-2 border-zinc-800 hover:border-yellow-500/50 transition-all group overflow-hidden">
      <div class="absolute inset-0 bg-gradient-to-br from-yellow-500/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity"></div>
      <div class="relative text-4xl md:text-5xl font-black bg-gradient-to-br from-yellow-500 to-yellow-400 bg-clip-text text-transparent mb-2">{wins}</div>
      <div class="relative text-zinc-400 uppercase text-xs md:text-sm font-bold tracking-wide">Victorias</div>
    </div>
    <div class="relative bg-zinc-900/50 backdrop-blur-sm rounded-xl p-6 text-center border-2 border-zinc-800 hover:border-orange-500/50 transition-all group overflow-hidden">
      <div class="absolute inset-0 bg-gradient-to-br from-orange-500/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity"></div>
      <div class="relative text-4xl md:text-5xl font-black bg-gradient-to-br from-orange-500 to-orange-400 bg-clip-text text-transparent mb-2">{podiums}</div>
      <div class="relative text-zinc-400 uppercase text-xs md:text-sm font-bold tracking-wide">Podios</div>
    </div>
    <div class="relative bg-zinc-900/50 backdrop-blur-sm rounded-xl p-6 text-center border-2 border-zinc-800 hover:border-purple-500/50 transition-all group overflow-hidden">
      <div class="absolute inset-0 bg-gradient-to-br from-purple-500/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity"></div>
      <div class="relative text-4xl md:text-5xl font-black bg-gradient-to-br from-purple-500 to-purple-400 bg-clip-text text-transparent mb-2">{poles}</div>
      <div class="relative text-zinc-400 uppercase text-xs md:text-sm font-bold tracking-wide">Pole Positions</div>
    </div>
  </div>

  <!-- Race History -->
  <div class="relative rounded-2xl p-6 md:p-8 mb-8" style={`background: linear-gradient(135deg, ${teamColorRgba20} 0%, #18181b 30%, #18181b 70%, ${teamColorRgba15} 100%)`}>
    <div class="absolute top-0 left-0 w-full h-full rounded-2xl opacity-30 pointer-events-none" style={`background: radial-gradient(circle at 20% 50%, ${teamColorRgba50} 0%, transparent 50%), radial-gradient(circle at 80% 80%, ${teamColorRgba40} 0%, transparent 50%)`}></div>
    <h2 class="relative text-3xl font-bold mb-6 pl-4" style={`color: ${team.color}; border-left: 4px solid ${team.color}`}>Historial de Carreras</h2>
    <div class="relative bg-zinc-900/50 backdrop-blur-sm rounded-xl overflow-hidden border border-zinc-800 shadow-xl">
      <div class="overflow-x-auto">
        <table class="w-full">
          <thead class="relative" style={`background: linear-gradient(135deg, ${team.color}, ${teamColorRgba40}); color: ${headerTextColor}`}>
            <tr>
              <th class="px-4 md:px-6 py-4 text-left font-bold uppercase text-xs md:text-sm" style={`color: ${headerTextColor}`}>Ronda</th>
              <th class="px-4 md:px-6 py-4 text-left font-bold uppercase text-xs md:text-sm" style={`color: ${headerTextColor}`}>Carrera</th>
              <th class="px-4 md:px-6 py-4 text-left font-bold uppercase text-xs md:text-sm hidden lg:table-cell" style={`color: ${headerTextColor}`}>Equipo</th>
              <th class="px-4 md:px-6 py-4 text-center font-bold uppercase text-xs md:text-sm" style={`color: ${headerTextColor}`}>Pos</th>
              <th class="px-4 md:px-6 py-4 text-center font-bold uppercase text-xs md:text-sm" style={`color: ${headerTextColor}`}>Pts</th>
              <th class="px-4 md:px-6 py-4 text-center font-bold uppercase text-xs md:text-sm hidden md:table-cell" style={`color: ${headerTextColor}`}>V. Rápida</th>
              <th class="px-4 md:px-6 py-4 text-center font-bold uppercase text-xs md:text-sm" style={`color: ${headerTextColor}`}>Pole</th>
            </tr>
          </thead>
          <tbody>
            {raceHistory.map((result: any, index: number) => (
              <tr class={`border-b border-zinc-800 hover:bg-zinc-800/50 transition-all group ${
                result.hadFastestLap ? 'bg-purple-900/20' : index % 2 === 0 ? 'bg-zinc-900/30' : ''
              }`}>
                <td class="px-4 md:px-6 py-4 font-bold text-sm md:text-base" style={`color: ${team.color}`}>{result.race.round}</td>
                <td class="px-4 md:px-6 py-4">
                  <div class="font-bold text-sm md:text-base group-hover:text-white transition-colors">{result.race.name}</div>
                  <div class="text-xs md:text-sm text-zinc-400">{result.circuit.name}</div>
                </td>
                <td class="px-4 md:px-6 py-4 hidden lg:table-cell">
                  <div class="flex items-center gap-2">
                    <span class="w-3 h-3 rounded" style={`background-color: ${result.raceTeam?.color}`}></span>
                    <span class="text-xs md:text-sm" style={`color: ${result.raceTeam?.color}`}>{result.raceTeam?.name}</span>
                  </div>
                </td>
                <td class="px-4 md:px-6 py-4 text-center">
                  <span class={`inline-flex items-center justify-center w-8 h-8 md:w-10 md:h-10 rounded-full font-bold text-sm md:text-lg ${
                    result.dnf ? 'bg-red-500/20 text-red-400 border border-red-500' : 
                    result.position === 1 ? 'bg-yellow-500/20 text-yellow-400 border border-yellow-500' : 
                    result.position === 2 ? 'bg-gray-400/20 text-gray-300 border border-gray-400' : 
                    result.position === 3 ? 'bg-orange-600/20 text-orange-400 border border-orange-600' : 
                    'bg-zinc-800 text-zinc-300'
                  }`}>
                    {result.dnf ? 'DNF' : result.position}
                  </span>
                </td>
                <td class="px-4 md:px-6 py-4 text-center font-bold text-sm md:text-base">{result.points}</td>
                <td class="px-4 md:px-6 py-4 text-center font-mono text-xs md:text-sm hidden md:table-cell">
                  {result.hadFastestLap ? (
                    <span class="inline-flex items-center gap-1 px-2 py-1 rounded-full bg-purple-500/20 text-purple-400 border border-purple-500">
                      <span>⚡</span>
                      <span>{result.fastestLap}</span>
                    </span>
                  ) : (
                    <span class="text-zinc-400">{result.fastestLap}</span>
                  )}
                </td>
                <td class="px-4 md:px-6 py-4 text-center">
                  {result.hadPole && (
                    <span class="inline-flex items-center justify-center w-6 h-6 md:w-7 md:h-7 rounded-full font-bold text-sm md:text-base" style={`background-color: ${team.color}20; color: ${team.color}; border: 2px solid ${team.color}`}>
                      ✓
                    </span>
                  )}
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  </div>
</Layout>
